# Maintainer: dogtopus <dogtopus@users.noreply.github.com>

_target='arm-mingw32ce'
_commit='8e64b608fc9c4d81e206e920ecc977d941577bef'

pkgname=arm-mingw32ce-w32api
pkgver=r1154
pkgrel=1
pkgdesc="Win32 API headers for CeGCC 9 compiler."
arch=('any')
url="https://max.kellermann.name/projects/cegcc/"
license=('custom')
groups=('arm-mingw32ce-toolchain' 'arm-mingw32ce')
makedepends=('arm-mingw32ce-gcc' 'arm-mingw32ce-binutils' 'arm-mingw32ce-mingwrt')
options=('!strip' '!buildflags' 'staticlibs' '!emptydirs')
source=("git+https://github.com/MaxKellermann/w32api.git#commit=${_commit}"
        "00-destdir.patch")
sha256sums=('SKIP'
            'ede2304a3de4b7ab6bb0c3140ecfeac464ceeab647db2d5b486b99b2d6ea11bd')

prepare() {
    cd "$srcdir/w32api"
    patch -p1 < ../00-destdir.patch
}

build() {
    cd "$srcdir/w32api"
    ./configure --prefix="/usr" \
        --build="${CHOST}" \
        --host="${_target}" \
        --target="${_target}"
    make
}

_gen_cegcc_header() {
    #
    # Create a cegcc.h file with some sensible input
    # Code is copied from the scripts/make_release.sh script.
    # This will probably always have "old" numbers
    #
    # CEGCC_VERSION_MAJOR=`echo $VERSION | awk -F. '{print $1}'`
    # CEGCC_VERSION_MINOR=`echo $VERSION | awk -F. '{print $2}'`
    # CEGCC_VERSION_PATCHLEVEL=`echo $VERSION | awk -F. '{print $3}'`
    #
    # Version patchlevel 999 refers to SVN from now on :-)
    #
    CEGCC_VERSION_MAJOR=0
    CEGCC_VERSION_MINOR=55
    CEGCC_VERSION_PATCHLEVEL=999
    #
    INCFILE="$srcdir/w32api/include/cegcc.h.in"
    DESTFILE="$pkgdir/usr/${_target}/include/cegcc.h"
    #
    L1=`grep -s -n "Automatic changes below" ${INCFILE} | awk -F: '{print $1}'`
    L2=`grep -s -n "Automatic changes above" ${INCFILE} | awk -F: '{print $1}'`
    head -$L1 ${INCFILE} >${DESTFILE}
    echo "#define   __CEGCC_VERSION_MAJOR__ " $CEGCC_VERSION_MAJOR >> ${DESTFILE}
    echo "#define   __CEGCC_VERSION_MINOR__ " $CEGCC_VERSION_MINOR >> ${DESTFILE}
    echo "#define   __CEGCC_VERSION_PATCHLEVEL__ " $CEGCC_VERSION_PATCHLEVEL >> ${DESTFILE}
    echo "#define   __CEGCC_BUILD_DATE__" `date +%Y%m%d` >> ${DESTFILE}
    tail -n +$L2 ${INCFILE} >>${DESTFILE}
}

package() {
    cd "$srcdir/w32api"
    make DESTDIR="$pkgdir/" install
    echo '=> Generating CeGCC header...'
    _gen_cegcc_header
}
