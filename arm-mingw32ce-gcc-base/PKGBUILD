# Maintainer: dogtopus <dogtopus@users.noreply.github.com>

_target='arm-mingw32ce'
_commit='a32a4bae1d0fb408c65ce974ad4a93e38480a517'
_islver=0.21

pkgname=arm-mingw32ce-gcc-base
pkgver=9.3.0
pkgrel=1
pkgdesc="Cross GCC for CeGCC 9 compiler (bootstrap)."
arch=('x86_64')
url="https://max.kellermann.name/projects/cegcc/"
license=('GPL' 'LGPL' 'FDL' 'custom')
groups=('arm-mingw32ce-bootstrap' 'arm-mingw32ce')
depends=('zlib' 'libmpc' 'arm-mingw32ce-binutils')
provides=('arm-mingw32ce-gcc')
conflicts=('arm-mingw32ce-gcc')
source=("git+https://github.com/MaxKellermann/gcc.git#commit=${_commit}"
        "http://isl.gforge.inria.fr/isl-${_islver}.tar.bz2")
sha256sums=('SKIP'
            'd18ca11f8ad1a39ab6d03d3dcb3365ab416720fcb65b42d69f34f51bf0a0e859')

prepare() {
    cd "$srcdir/gcc"
    # link isl for in-tree builds
    ln -sf ../isl-${_islver} isl
}

build() {
    mkdir -p "$srcdir/gcc/build-${_target}"
    cd "$srcdir/gcc/build-${_target}"

    # temporarily disable -Werror=format-security because it breaks the build
    export CFLAGS="${CFLAGS} -Wno-error=format-security"
    export CXXFLAGS="${CXXFLAGS} -Wno-error=format-security"

    echo '=> Configuring gcc...'
    ../configure --prefix=/usr \
        --libexecdir=/usr/lib \
        --target=${_target} \
        --with-system-zlib \
        --with-gcc \
        --with-gnu-ld \
        --with-gnu-as \
        --disable-threads \
        --disable-nls \
        --enable-languages=c \
        --disable-win32-registry \
        --disable-multilib \
        --disable-shared \
        --disable-interwork \
        --without-newlib \
        --disable-werror \
        --enable-checking
    echo '=> Building gcc...'
    make all-gcc

    # manually build libgcc for building w32api and mingwrt
    echo '=> Running configure-target-libgcc...'
    CPP='gcc -E' make configure-target-libgcc
    cd "${_target}/libgcc"
    echo '=> Building target libgcc...'
    make libgcc.a
}

package() {
    cd "$srcdir/gcc/build-${_target}"
    echo '=> Installing gcc...'
    make DESTDIR="$pkgdir/" install-gcc
    echo '=> Installing target libgcc...'
    install -c -m 644 "$srcdir/gcc/build-${_target}/${_target}/libgcc/libgcc.a" "$pkgdir/usr/lib/gcc/${_target}/$pkgver"

    # Remove redundant manual files, etc.
    rm -r "$pkgdir/usr/share"
}
